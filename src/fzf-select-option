#!/usr/bin/env bash

usage="Usage: $(basename "$0") [-h | --help] <cmd>

Displays the cli options for <cmd> using fzf, allowing the user to select one
of them. The options is send to stdout when it is accepted. In the preview
window, the selected option is highlighted and the help message for the option
is displayed. 

The <cmd> can also be provided via stdin. The <cmd> can also containt options
which will be stripped. For example, \`rm -rf\` will be treated as \`rm\`.

This program is intended to be used with the fzf-select-command program as the
function used for the fzf --preview option.

where:
    options:
    -h --help   shows this help messages

    positional:
    <cmd>   an existing command"

parse_args() {
    while [[ $# -gt 0 ]]; do
        case "$1" in
            -h | --help)
                echo "$usage"
                exit 0
                ;;
            -*)
                echo "Unknown option: $1"
                echo "$usage"
                exit 1
                ;;
            *)
                cmd="$1"
                shift
                ;;
        esac
    done

    if [[ -z $cmd ]]; then
        cmd="$(cat -)"
    fi

    cmd=$(get_command <<<"$cmd")
}

get_command() {
    sed "s/\( -\).*$//"
}

get_fzf_help_opts() {
    if [[ -z $FZF_HELP_OPTS ]]; then
        FZF_HELP_OPTS="--multi --layout=reverse --preview-window=right,75%,wrap --height 80% "
        FZF_HELP_OPTS+="--bind ctrl-a:change-preview-window(down,75%,nowrap|right,75%,nowrap)"
    fi
}

get_preview_cmd() {
    if [[ -z $opts ]]; then
        echo "echo \"No help page or options found for $cmd\""
    else
        # Uses the cached help message, see help-message.
        echo "$dir/help-message | $dir/fzf-select-option-preview \"$opts\" {n}"
    fi
}

remove_line_number() {
    sed "s/^.*://g"
}

cmd=""
parse_args "$@"
[[ -z $cmd ]] && echo "$usage" && exit 1

get_fzf_help_opts

dir=$(dirname $(realpath ${BASH_SOURCE:-$0}))
opts="$($dir/help-message "$cmd" | $dir/cli-options)"
preview_cmd=$(get_preview_cmd)

remove_line_number <<<"$opts" | fzf --prompt="$buffer" --preview "$preview_cmd" $FZF_HELP_OPTS
