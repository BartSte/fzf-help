#!/usr/bin/env bash

usage="Usage: $(basename "$0") [-h | --help] <command> <option>

Uses bat to display the help message of <command> where the <option> is highlighted
with the help message. The list of available options can be supplied via 
stdin if possible, else <command> --help and a regex is used to extract the options.

The theme used by bat can be overridden by setting the BAT_CLI_OPTION_THEME 
environment variable. By setting the CLI_OPTIONS_CMD environment variable, the
command used to get the list of options can be overridden. For example, if you
want to use the man page of <cmd> instead of <cmd> --help, you can set
CLI_OPTIONS_CMD to 'man $cmd'.

where:
    options:
    -h --help   shows this help messages

    positional:
    <command>   an existing command
    <option>    an option of <command>"

parse_args() {
    while [[ $# -gt 0 ]]; do
        case "$1" in
            -h|--help)
                echo "$usage"
                exit 0
                ;;
            *)
                if [[ -z $command ]]; then
                    command="$1"
                elif [[ -z $option ]]; then
                    option="$1"
                else
                    echo "Unknown argument: $1"
                    echo "$usage"
                    exit 1
                fi
                ;;
        esac
        shift
    done
}

_get_cli_options() {
    # Use options from stdin if they are available
    local command this_dir
    command=$1
    this_dir=$(dirname $(realpath ${BASH_SOURCE:-$0}))

    if [[ -p /dev/stdin ]]; then
        echo "$(cat -)"
    else
        echo "$($this_dir/cli-options $command)"
    fi
}

get_line_number() {
    local line_number line_number_and_word
    line_number_and_word="$1"
    line_number=$(ag -Q -- "$line_number_and_word" | head -1 | sed "s/:.*$//g")
    [ -z $line_number ] && line_number=0
    echo "$line_number"
}

get_scroll_lines() {
    local half_page line_number scroll

    line_number=$1
    half_page=$(get_half_page)

    scroll=$(($line_number-$half_page));
    scroll=$(($scroll > 0 ? $scroll : 0));
    echo $scroll
}

get_half_page() {
    local number_of_lines

    number_of_lines=$FZF_PREVIEW_LINES 
    [ -z $number_of_lines ] && number_of_lines=$(tput lines)

    echo $(($number_of_lines / 2))
}

parse_args "$@"

[[ -z $command ]] && echo "Missing <command>" && echo "$usage" && exit 1
[[ -z $option ]] && echo "Missing <option>" && echo "$usage" && exit 1
[[ -z $CLI_OPTIONS_CMD ]] && CLI_OPTIONS_CMD="$command --help"

line_number=$(_get_cli_options $command | get_line_number $option)
scroll=$(get_scroll_lines $line_number)
printf '\033[2J'
eval $CLI_OPTIONS_CMD | bat -f -p -H $line_number -r $scroll: --language=help
